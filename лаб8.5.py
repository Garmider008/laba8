#2. Задача полягає у вивченні і реалізації алгоритмів пошуку для даних, підготовлених
#за допомогою функції моделювання випадкових чисел і текстів, підготовлених
#самостійно.
#Для кожного алгоритму необхідно підготувати тести, що підтверджують
#працездатність програми. Для всіх алгоритмів пошуку повинні бути приведені лістинги
#програм пошуку та лістинги результатів (номера позиції в вихідному масиві, починаючи
#з якого розташований елемент або фрагмент пошуку; кількості порівнянь по кожному
#алгоритму пошуку).
#Гармідер Анастасія,122-В

#Лінійний пошук
#Тестування програми

import numpy as np
import random
m1=np.array(range(1,10))  #Створимо масив, для перевірки правильності нашого пошуку.
print(m1)
x=int(input('Введіть елемент для пошуку'))#Якщо користувач введе більше 9, то елемент знайдений не буде
l=len(m1)
count=0                            #Введемо лічильник для підрахунку кількості ітерацій і перебору нашого масиву
while count<l and m1[count]!=x:  #Вводимо лінійний пошук
    count+=1
print('Кількість порівнянь',count)  #кількість порівнянь, починається з 0 з кроком 1 значення в нашому завданні необхідно х-1 кроків
if count==l:
    print('Елемент не знайдений')
else:
    print(f'На позиції {count} знайдений {x}')
#Робота програми з рандомних значеннями
m2=np.zeros(20,dtype=int)
for i in range(20):
    m2[i]=random.randint(-10,10)
print(m2)
l1=len(m2)
count2=0
while count2<l and m2[count2]!=x:  #Вводимо лінійний пошук
    count2+=1
print('Кількість порівнянь',count2)  #кількість порівнянь
if count2==l1:
    print('Елемент не знайдений')
else:
    print(f'На позиції {count2} знайдений {x}')
